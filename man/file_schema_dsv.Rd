% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file_helpers.R
\name{file_schema_dsv}
\alias{file_schema_dsv}
\title{file_schema_dsv returns a data frame with the schema of a DSV file}
\usage{
file_schema_dsv(
  input_file,
  header = TRUE,
  sep = ",",
  dec = ".",
  grp = "",
  id_quote_method = "DB_NAMES",
  max_lines = 2000,
  comment.char = "",
  ...
)
}
\arguments{
\item{input_file}{character, file name (including path) to be read.}

\item{header}{logical, if \code{TRUE} the first line contains the fields'
names. If \code{FALSE}, the column names will be formed sing a "V"
followed by the column number (as specified in \code{\link[utils:read.table]{utils::read.table()}}).}

\item{sep}{character, field delimiter (e.g., "," for CSV, "\\t" for TSV)
in the input file. Defaults to ",".}

\item{dec}{character, decimal separator (e.g., "." or "," depending on locale)
in the input file. Defaults to ".".}

\item{grp}{character, character used for digit grouping. It defaults
to \code{""} (i.e. no grouping).}

\item{id_quote_method}{character, used to specify how to build the SQLite
columns' names using the fields' identifiers read from the input file.
For details see the description of the \code{quote_method} parameter of
the \code{\link[=format_field_names]{format_field_names()}} function. Defautls to \code{DB_NAMES}.}

\item{max_lines}{integer, number of lines (excluding the header) to be
read to infer columns' data types. Defaults to 2000.}

\item{comment.char}{character, dafaults to \code{""} (i.e. interpretation of
comments is turned off). Used to alig this parameter value between
\code{scan} and \code{read.table} that assume different default values for it.}

\item{...}{Additional arguments passed to \code{\link[utils:read.table]{utils::read.table()}}.}
}
\value{
a data frame with these columns:
\itemize{
\item \code{col_names}: columns' names, after applying the selected quote method;
\item \code{col_types}: columns' R data types;
\item \code{sql_types}: columns' SQLite data types;
\item \code{src_names}: columns' names as they appear in the input file.
\item \code{src_types}: dafults to \code{text} for all columns.
}
}
\description{
Reads only the first \code{max_lines} of a delimiter separated values (DSV)
text file to infer column names and data types, without reading the full
dataset into memory. Then it converts them to the candidate data
frame columns' names and data types.
}
\examples{
\dontrun{
file_schema_dsv("data.csv", sep=",", dec=".", max_lines=50)
file_schema_dsv("euro.csv", sep=";", dec=",", header=FALSE)
}
}
