% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbTableFromFeather.R
\name{dbTableFromFeather}
\alias{dbTableFromFeather}
\title{dbTableFromFeather create a table in a SQLite database from a
Feather (Arrow IPC) file}
\usage{
dbTableFromFeather(
  input_file,
  dbcon,
  table_name,
  id_quote_method = "DB_NAMES",
  col_names = NULL,
  col_types = NULL,
  drop_table = FALSE,
  auto_pk = FALSE,
  build_pk = FALSE,
  pk_fields = NULL,
  constant_values = NULL
)
}
\arguments{
\item{input_file}{character, the file name (including path) to be read.}

\item{dbcon}{database connection, as created by the dbConnect function.}

\item{table_name}{string, the name of the table.}

\item{id_quote_method}{character, used to specify how to build the SQLite
columns' names using the fields' identifiers read from the input file.
For details see the description of the \code{quote_method} parameter of
the \code{\link[=format_field_names]{format_field_names()}} function. Defautls to \code{DB_NAMES}.}

\item{col_names}{character vector, names of the columuns to be imported.
Used to override the field names derived from the input file (using the
quote method selected by \code{id_quote_method}). Must be of the same length
of the number of columns in the input file. If \code{NULL} the column names
coming from the input file (after quoting) will be used. Defaults to \code{NULL}.}

\item{col_types}{character vector of classes to be assumed for the columns.
If not null, it will override the data types inferred from the input file.
Must be of the same length of the number of columns in the input file.
If \code{NULL} the data type inferred from the input files will be used.
Defaults to \code{NULL}.}

\item{drop_table}{logical, if \code{TRUE} the target table will be dropped (if exists)
and recreated before importing the data.  if \code{FALSE}, data from the input
file will be appended to an existing table. Defaults to \code{FALSE}.}

\item{auto_pk}{logical, if \code{TRUE}, and \code{pk_fields} parameter is \code{NULL}, an
additional column named \code{SEQ} will be added to the table and it will be
defined to be \verb{INTEGER PRIMARY KEY} (i.e. in effect an alias for
\code{ROWID}).}

\item{build_pk}{logical, if \code{TRUE} creates a \verb{UNIQUE INDEX} named
\verb{<table_name>_PK} defined by the combination of fields specified
in the \code{pk_fields} parameter. It will be effective only if \code{drop_table}
is \code{TRUE} and \code{pk_fields} is not null. Defaults to \code{FALSE}.}

\item{pk_fields}{character vector, the list of the fields' names that
define the \verb{UNIQUE INDEX}. Defults to \code{NULL}.}

\item{constant_values}{a one row data frame whose columns will be added to
the table in the database. The additional table columns will be named
as the data frame columns, and the corresponding values will be associeted
to each record imported from the input file. It is useful to keep
track of additional information (e.g., the input file name, additional
context data not available in the data set, ...) when loading
the content of multiple input files in the same table.}
}
\value{
nothing
}
\description{
The dbTableFromFeather function reads the data from a Apache
Arrow table serialized in a Feather (Arrow IPC) file and copies it
to a table in a SQLite database. If table does not exist, it will
create it.
}
